<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>ps1</string>
		<string>psm1</string>
		<string>psd1</string>
	</array>
	<key>name</key>
	<string>Powershell v2</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>begin</key>
			<string>&lt;#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.start.definition.comment.block.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>#&gt;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.end.definition.comment.block.powershell</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.block.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentEmbeddedDocs</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>#</string>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>comment.line.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#commentEmbeddedDocs</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>include</key>
			<string>#variable</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#scriptblock</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;!(?&lt;!`)")"</string>
			<key>end</key>
			<string>"(?!")</string>
			<key>name</key>
			<string>string.quoted.double.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#doubleQuotedStringEscapes</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>match</key>
					<string>`\s*$</string>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>comment</key>
			<string>Needed to parse stuff correctly in 'argument mode'. (See about_parsing.)</string>
			<key>include</key>
			<string>#doubleQuotedStringEscapes</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>(?&lt;!')'</string>
			<key>end</key>
			<string>'(?!')</string>
			<key>name</key>
			<string>string.quoted.single.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>@"$</string>
			<key>end</key>
			<string>^"@</string>
			<key>name</key>
			<string>string.quoted.double.heredoc.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>@\(</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.group.array-expression.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>\$\(</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</dict>
			<key>comment</key>
			<string>TODO: move to repo; make recursive.</string>
			<key>end</key>
			<string>\)</string>
			<key>name</key>
			<string>meta.group.complex.subexpression.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>@'$</string>
			<key>end</key>
			<string>^'@$</string>
			<key>name</key>
			<string>string.quoted.double.heredoc.powershell</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numericConstant</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-([lg][te]|[ci]?(eq|ne))</string>
			<key>name</key>
			<string>keyword.operator.logical.powershell</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#PSDefaults</string>
		</dict>
		<dict>
			<key>match</key>
			<string>(?i:[a-z][a-z0-9]+-[a-z][a-z0-9]+)</string>
			<key>name</key>
			<string>support.function.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(?i:if|else|elseif|switch|while|default|for|do|until|break|continue|foreach|return|filter|in|trap|throw|param|begin|process|end|function|global|local|private|script|contained)\b</string>
			<key>name</key>
			<string>keyword.control.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-(?i:(?:[ic]?eq|ne|[gl][te]|(?:not)?(?:like|match|contains)|replace)|is(?:not)?|as|and|or|band|bor|not|f)\b</string>
			<key>name</key>
			<string>keyword.operator.comparison.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-(?i:and|or|not)|!</string>
			<key>name</key>
			<string>keyword.operator.logical.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-(?i:f|band|bor|-bnot)\b</string>
			<key>name</key>
			<string>keyword.operator.bitwise.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>-f\b</string>
			<key>name</key>
			<string>keyword.operator.string-format.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>[+%*/-]?=|[+/*%-]</string>
			<key>name</key>
			<string>keyword.operator.assignment.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>2&gt;&amp;1|&gt;&gt;|&gt;|&lt;&lt;|&lt;|&gt;|&gt;\||2&gt;|2&gt;&gt;|1&gt;&gt;</string>
			<key>name</key>
			<string>keyword.operator.redirection.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\|{2}|&amp;{2}|;</string>
			<key>name</key>
			<string>keyword.other.statement-separator.powershell</string>
		</dict>
		<dict>
			<key>match</key>
			<string>&amp;|(?&lt;!\w)\.(?= )|`|,|\|</string>
			<key>name</key>
			<string>keyword.operator.other.powershell</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>PSDefaults</key>
		<dict>
			<key>comment</key>
			<string>Default commandlets in Powershell v2</string>
			<key>match</key>
			<string>Disconnect-(WSMan)|Exit-(PSSession)|Copy-(Item|ItemProperty)|Resolve-(Path)|Group-(Object)|Remove-(Computer|Event|EventLog|Item|ItemProperty|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|Variable|WmiObject|WSManInstance)|Unregister-(Event|PSSessionConfiguration)|Tee-(Object)|Pop-(Location)|Set-(Acl|Alias|AuthenticodeSignature|Content|Date|ExecutionPolicy|Item|ItemProperty|Location|PSBreakpoint|PSDebug|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance|WSManInstance|WSManQuickConfig)|Format-(Custom|List|Table|Wide)|Invoke-(Command|Expression|History|Item|WmiMethod|WSManAction)|Export-(Alias|Clixml|Console|Counter|Csv|FormatData|ModuleMember|PSSession)|Update-(FormatData|List|TypeData)|Sort-(Object)|Measure-(Command|Object)|ForEach-(Object)|Connect-(WSMan)|Suspend-(Service)|ConvertFrom-(Csv|SecureString|StringData)|Where-(Object)|Rename-(Item|ItemProperty)|Convert-(Path)|Select-(Object|String|Xml)|Import-(Alias|Clixml|Counter|Csv|LocalizedData|Module|PSSession)|Stop-(Computer|Job|Process|Service|Transcript)|New-(Alias|Event|EventLog|Item|ItemProperty|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionOption|Service|TimeSpan|Variable|WebServiceProxy|WSManInstance|WSManSessionOption)|Resume-(Service)|Show-(EventLog)|Out-(Default|File|GridView|Host|Null|Printer|String)|Undo-(Transaction)|Trace-(Command)|Clear-(Content|EventLog|History|Item|ItemProperty|Variable)|Push-(Location)|Split-(Path)|Disable-(ComputerRestore|PSBreakpoint|PSSessionConfiguration|WSManCredSSP)|Reset-(ComputerMachinePassword)|Restore-(Computer)|ConvertTo-(Csv|Html|SecureString|Xml)|Enable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration|WSManCredSSP)|Join-(Path)|Register-(EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)|Compare-(Object)|Get-(Acl|Alias|AuthenticodeSignature|ChildItem|Command|ComputerRestorePoint|Content|Counter|Credential|Culture|Date|Event|EventLog|EventSubscriber|ExecutionPolicy|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job|Location|Member|Module|PfxCertificate|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration|PSSnapin|Random|Service|TraceSource|Transaction|UICulture|Unique|Variable|WinEvent|WmiObject|WSManCredSSP|WSManInstance)|Receive-(Job)|Move-(Item|ItemProperty)|Add-(Computer|Content|History|Member|PSSnapin|Type)|Wait-(Event|Job|Process)|Send-(MailMessage)|Read-(Host)|Complete-(Transaction)|Checkpoint-(Computer)|Debug-(Process)|Use-(Transaction)|Restart-(Computer|Service)|Write-(Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning)|Test-(ComputerSecureChannel|Connection|ModuleManifest|Path|WSMan)|Start-(Job|Process|Service|Sleep|Transaction|Transcript)|Limit-(EventLog)|Enter-(PSSession)</string>
			<key>name</key>
			<string>support.function.builtin.powershell</string>
		</dict>
		<key>commentEmbeddedDocs</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.string.documentation.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.documentation.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:\s*(\.)(SYNOPSIS|DESCRIPTION|EXAMPLE|INPUTS|OUTPUTS|NOTES|LINK|COMPONENT|FUNCTIONALITY))</string>
					<key>name</key>
					<string>comment.documentation.embedded.powershell</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>constant.string.documentation.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.documentation.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.documentation.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:\s*(\.)(PARAMETER|FORWARDHELPTARGETNAME|FORWARDHELPCATEGORY|REMOTEHELPRUNSPACE|EXTERNALHELP)\s+([a-z0-9-_]+))</string>
					<key>name</key>
					<string>comment.documentation.embedded.powershell</string>
				</dict>
			</array>
		</dict>
		<key>doubleQuotedStringEscapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>`[0abnfrvt"'$`]</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.powershell</string>
				</dict>
			</array>
		</dict>
		<key>interpolatedStringContent</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>interpolated.simple.source.powershell</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolatedStringContent</string>
				</dict>
			</array>
		</dict>
		<key>interpolation</key>
		<dict>
			<key>begin</key>
			<string>(\$)\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>interpolated.complex.source.powershell</string>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powershell</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#interpolatedStringContent</string>
				</dict>
			</array>
		</dict>
		<key>numericConstant</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.math.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>support.constant.powershell</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:\d+(E)(\+|\-)\d+(d)?(mb|kb|gb)?)</string>
					<key>name</key>
					<string>constant.numeric.scientific.powershell</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:(0x)[a-f0-9]+(mb|kb|gb)?)</string>
					<key>name</key>
					<string>constant.numeric.hexadecimal.powershell</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.constant.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\d*(?&lt;!\.)(\.)\d+(d)?(mb|kb|gb)?</string>
					<key>name</key>
					<string>constant.numeric.double.powershell</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.constant.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?&lt;!\w)\d+(d)?(mb|kb|gb)?(?!\w)</string>
					<key>name</key>
					<string>constant.numeric.powershell</string>
				</dict>
			</array>
		</dict>
		<key>scriptblock</key>
		<dict>
			<key>begin</key>
			<string>\{</string>
			<key>end</key>
			<string>\}</string>
			<key>name</key>
			<string>meta.scriptblock.powershell</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>$self</string>
				</dict>
			</array>
		</dict>
		<key>variable</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>constant.numeric.powershell</string>
						</dict>
					</dict>
					<key>comment</key>
					<string>Style var name as numeric constant so that they stand out.</string>
					<key>match</key>
					<string>(\$)(?i:(\$|\?|\^|args|ConfirmPreference|ConsoleFileName|DebugPreference|Error|ErrorActionPreference|ErrorView|ExecutionContext|false|FormatEnumerationLimit|HOME|Host|input|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount|MaximumHistoryCount|MaximumVariableCount|MyInvocation|NestedPromptLevel|null|OutputEncoding|PID|PROFILE|ProgressPreference|PSBoundParameters|PSCulture|PSEmailServer|PSHOME|PSSessionApplicationName|PSSessionConfigurationName|PSSessionOption|PSUICulture|PSVersionTable|PWD|ReportErrorShowExceptionClass|ReportErrorShowInnerException|ReportErrorShowSource|ReportErrorShowStackTrace|ShellId|StackTrace|true|VerbosePreference|WarningPreference|WhatIfPreference))\b</string>
					<key>name</key>
					<string>support.variable.builtin.powershell</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.variable.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:(\$)(?:(private|script|global):)?([a-z0-9_]+))</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.variable.powershell</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>variable.other.readwrite.powershell</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>storage.modifier.scope.powershell</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?i:(\$)(\{(?:(private|script|global):)?.+?\}))</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.powershell</string>
	<key>uuid</key>
	<string>f8f5ffb0-503e-11df-9879-0800200c9a66</string>
</dict>
</plist>
